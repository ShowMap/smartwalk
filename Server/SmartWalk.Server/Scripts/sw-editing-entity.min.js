EntityViewModelExtended=function(n,t){var i=this;i._initialData=t;EntityViewModelExtended.superClass_.constructor.call(i,t);i.settings=n;i.data=new EntityViewModel(t);i.contactsManager=new VmItemsManager(i.data.contacts,function(){return new ContactViewModel({Type:sw.vm.ContactType.Url})},{beforeEdit:function(){i.addressesManager.cancelAll()},beforeSave:function(n){n.errors||EntityViewModelExtended.setupContactValidation(n,i.settings)},itemView:i.settings.contactView,itemEditView:i.settings.contactEditView});i.addressesManager=new VmItemsManager(i.data.addresses,function(){return new AddressViewModel({})},{initItem:function(n){EntityViewModelExtended.initAddressViewModel(n)},beforeEdit:function(){i.contactsManager.cancelAll()},beforeSave:function(n){n.errors||EntityViewModelExtended.setupAddressValidation(n,i.settings)},itemView:i.settings.addressView,itemEditView:i.settings.addressEditView});i.getContactType=function(n){return i.settings.contactTypes[n.type()]};i.data.toTinyJSON=function(){return{Id:i.data.id(),Type:i.data.type(),Name:i.data.name()}};i.saveEntity=function(t){return(i.data.errors||EntityViewModelExtended.setupValidation(i.data,n),i.data.isValidating())?(setTimeout(function(){i.saveEntity(t)},50),!1):(i.data.errors().length==0?i.currentRequest=sw.ajaxJsonRequest(i.data.toJSON.apply(i.data),i.settings.entitySaveUrl,function(n){t&&$.isFunction(t)?t(n):(i._initialData=n,i.data.loadData(n),i.settings.entityAfterSaveAction(n.Id))},function(n){i.handleServerError(n)},i):i.data.errors.showAllMessages(),!0)};i.cancelEntity=function(){i.isBusy()?i.isBusy(!1):i.settings.entityAfterCancelAction()};i.onWindowClose=function(){var t=new EntityViewModel(i._initialData);return JSON.stringify(t.toJSON())!=JSON.stringify(i.data.toJSON())?n.unsavedChangesMessage:undefined};EntityViewModelExtended.setupAutocompleteAddress(i)};sw.inherits(EntityViewModelExtended,ViewModelBase);EntityViewModelExtended.setupValidation=function(n,t){n.name.extend({required:{message:t.nameRequiredValidationMessage}}).extend({maxLength:{params:255,message:t.nameLengthValidationMessage}}).extend({asyncValidation:{validationUrl:t.validationUrl,propName:"Name",modelHandler:n.toTinyJSON}});n.picture.extend({maxLength:{params:255,message:t.pictureLengthValidationMessage}}).extend({urlValidation:{params:{allowEmpty:!0},message:t.picturePatternValidationMessage}});n.description.extend({maxLength:{params:3e3,message:t.descriptionLengthValidationMessage}});n.isValidating=ko.computed(function(){return n.name.isValidating()||n.picture.isValidating()||n.description.isValidating()});n.errors=ko.validation.group(n)};EntityViewModelExtended.setupContactValidation=function(n,t){n.type.extend({dependencies:[n.contact]});n.contact.extend({required:{params:!0,message:t.contactMessages.contactRequiredValidationMessage}}).extend({maxLength:{params:255,message:t.contactMessages.contactLengthValidationMessage}}).extend({contactValidation:{allowEmpty:!0,contactType:n.type,messages:t.contactMessages}});n.title.extend({maxLength:{params:255,message:t.contactMessages.contactTitleValidationMessage}});n.errors=ko.validation.group(n)};EntityViewModelExtended.setupAddressValidation=function(n,t){n.address.extend({maxLength:{params:255,message:t.addressMessages.addressLengthValidationMessage}});n.latitude.extend({number:!0}).extend({notEqual:"0"}).extend({min:-90}).extend({max:90}).extend({required:{params:!0,message:t.addressMessages.addressLatitudeValidationMessage}});n.longitude.extend({number:!0}).extend({notEqual:"0"}).extend({min:-180}).extend({max:180}).extend({required:{params:!0,message:t.addressMessages.addressLongitudeValidationMessage}});n.tip.extend({maxLength:{params:255,message:t.addressMessages.addressTipValidationMessage}});n.errors=ko.validation.group(n)};EntityViewModelExtended.setupAutocompleteAddress=function(n){typeof google!="undefined"&&typeof google.maps!="undefined"?(n.geocoder=new google.maps.Geocoder,n.getAutocompleteAddresses=function(t,i){n.geocoder.geocode({address:t},function(n,t){t==google.maps.GeocoderStatus.OK?i(n):i(null)})}):n.getAutocompleteAddresses=function(){return null}};EntityViewModelExtended.initAddressViewModel=function(n){n.mapPoint=ko.computed({read:function(){return n.latitude()&&n.longitude()?{lat:n.latitude(),lng:n.longitude()}:undefined},write:function(t){n.latitude(t?t.lat:undefined);n.longitude(t?t.lng:undefined)}});n.addressData=ko.computed({read:function(){return{formatted_address:n.address()||null}},write:function(t){t&&t.geometry&&t.geometry.location&&n.mapPoint(ko.googleMap.toSWLatLng(t.geometry.location))}})};
/*
//# sourceMappingURL=sw-editing-entity.min.js.map
*/