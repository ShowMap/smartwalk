@using SmartWalk.Server.Records
@using SmartWalk.Server.ViewModels
@using System.Text.RegularExpressions

@{
    Script.Require("jQueryUI").AtHead();
    Script.Require("SmartWalk.ViewModels").AtHead();
    
    var host = (EntityVm) Model;
}

<div id="view-host-form" get-host-events="@Url.Action("GetEvents", "Host", new {area = "SmartWalk.Server"})">
    @Html.AntiForgeryTokenOrchard()
    <div id="venue-panel">
        <div class="row">
            <div class="col-xs-8">
                <h2>@host.DisplayName</h2>
            </div>
            <div class="col-xs-4 text-right">
                <button type="button" class="btn btn-primary" id="btn-edit-venue">@T("Edit Host")</button>
            </div>
        </div>
        
        @if (!string.IsNullOrEmpty(host.Picture)) {
            <div class="image-container">
                <img src="@host.Picture" />
            </div>
        }
        
        @if (host.AllAddresses.Any()) {
            var addressFirst = host.AllAddresses.First();
            var query = Regex.Replace(addressFirst.Address.Replace("&", " "), @",\s+", ",");
            query = Regex.Replace(query, @"\s+", "+");
            <iframe class="map-container" frameborder="0" src="https://www.google.com/maps/embed/v1/place?q=@query&key=AIzaSyAOwfPuE85Mkr-xoNghkIB7enlmL0llMgo"></iframe>
            
            <div class="row">
                <div class="col-md-8 addresses-container">
                    @foreach (var address in host.AllAddresses) {
                        <div>                            				
                            <h4>
                                @T("Address"):&nbsp;1:&nbsp;<address>@Regex.Replace(address.Address, @"\s+", " ");</address>
                                @if (!string.IsNullOrEmpty(address.Tip)) {
                                    <i class="description">@address.Tip</i>
                                }
                            </h4>
                        </div>                        
                    }
                </div>
            </div>
        }
                  
        
        <div class="row gap">
            <div class="col-md-7"><p>@host.Description</p></div>
            <div class="col-md-5 contact-container">
                @if (host.AllContacts.Any()) {
                    <div class="well">
                        <h4 class="text-center">@T("Contacts and Links")</h4>
                        <dl class="dl-horizontal">
                            @foreach (var contact in host.AllContacts) {
                                var title = contact.Title ?? contact.Contact;                             
                             
                                switch ((ContactType)contact.Type) {
                                    case ContactType.Url:
                                        var url = contact.Contact.StartsWith("http") ? contact.Contact : string.Format("http://{0}", contact.Contact);
                                        <dt>@T("web"):</dt>
                                        <dd><a href="@url">@title</a></dd>
                                        break;
                                    case ContactType.Phone:
                                        <dt>@T("phone"):</dt>
                                        <dd>@contact.Contact</dd>
                                        break;
                                    case ContactType.Email:
                                        <dt>@T("email"):</dt>
                                        <dd><a href="mailto:@contact.Contact">@title</a></dd>
                                        break;
                                }
                            }
                        </dl>
                    </div>   
                }                
            </div>
        </div>     

        <table class="table gap" data-bind="visible: EventItems().length > 0">
            <thead>
                <tr><th><h4>@T("Recent Events")</h4></th><th>@T("Date")</th></tr>
            </thead>
            <tbody data-bind='template: {name: "eventItemTemplate", foreach: EventItems() }'></tbody>
        </table>
                
    </div>
</div>

<script type="text/html" id="eventItemTemplate">
    <tr>
        <td>
            <a data-bind="attr: {href: '/event/'+Id()}, text:$root.GetLinkTitle($data)"></a><br/>
            <span class="description" data-bind="text: Description"></span>
        </td>
        <td data-bind="text: DateCreated"></td>        
    </tr>       
</script>

<script>
    $(document).ready(function() {

        $( "#btn-edit-venue" ).click(function() {
            window.location.href = "@Url.Action("View")" + "/edit";
        });

        function EventsViewModel() {
            var self = this;

            self.EventItems = ko.observableArray();

            self.GetLinkTitle = function(item) {
                
                if (!item.Title())
                    return '@T("View")';
                
                return item.Title();
            };

            self.loadData = function() {
                var ajdata = ko.toJSON({ entityId: @host.Id });
                var urlUpdate = $("#view-host-form").attr("get-host-events");

                var config = {
                    async: true,
                    url: urlUpdate,
                    type: "POST",
                    data: ajdata,
                    dataType: "json",
                    cache: false,
                    contentType: "application/json; charset=utf-8",
                    error: function(e) {
                    },
                    success: function(data) {
                        if (data) {
                            self.EventItems($.map(data, function(item) { return new EventViewModel(item); }));                            
                        }
                    }
                };
                $.ajax(config);
            };

            self.loadData();            
        }


        ko.applyBindings(new EventsViewModel(), document.getElementById('view-venue-form'));
    });
</script>