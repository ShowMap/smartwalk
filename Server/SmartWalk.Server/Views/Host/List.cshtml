
@using SmartWalk.Server.ViewModels

@{
    Style.Require("jQueryUI_Orchard");
    Style.Require("SmartWalk.Host");

    Script.Require("jQueryUI").AtHead();
    Script.Require("SmartWalk.ViewModels").AtHead();

    var items = (IList<EntityVm>)Model;
}

<div id="entity-items" data-bind="visible: Items().length > 0">
    <div class="container">
        <div class="row">
            <div class="col-xs-8">
                <div class="input-group">
                    <input type="text" class="form-control" placeholder="@T("Type organizer name...")">
                    <span class="input-group-btn">
                        <button class="btn btn-default" type="button">@T("Search")</button>
                    </span>
                </div>
            </div>
            <div class="col-xs-4 text-right">
                <form action="/organizers/create">
                    <button type="submit" class="btn btn-primary">@T("Create organizer")</button>
                </form>                
            </div>
        </div>
        
        <div class="gap">
            <small>
                <a href="#/events">@T("All Organizers")</a>&nbsp;|&nbsp;<a href="#/events/my">@T("My Organizers")</a>
                &nbsp;&nbsp;&nbsp;&nbsp;
                @T("Sort By"):&nbsp;<a href="#/events">@T("Date")</a>&nbsp;|&nbsp;<a href="#/events/my">@T("Title")</a>
            </small>
        </div>

        <div class="floating-container small-gap">
            @foreach (var item in items) {
                <a class="thumbnail floating" href="@Url.Action("View", new {entityId = item.Id})">
                    <img src="@item.Picture">
                    <div class="caption">
                        <h3>@item.DisplayName</h3>					    
                    </div>
                </a>
            }
            <div class="clearfix"/>
        </div>                   
    </div>
</div>

<script type="text/html" id="EntityItemTemplate">    
</script>

<script>       
    function HostsViewModel() {
        var self = this;
        
        //self.Items = ko.observableArray($.map(@Html.Raw(Json.Encode(items)), function(item) { return new EntityViewModel(item); }));
    }

    //ko.applyBindings(new HostsViewModel(), document.getElementById('entity-items'));
</script>