@using SmartWalk.Server.ViewModels
@{
    Style.Require("SmartWalk");

    Script.Require("jQueryUI").AtFoot();
    Script.Require("SmartWalk.ViewModels.Entity").AtFoot();
    Script.Require("ImageScale").AtFoot();

    var model = (ListViewVm)Model;
    var parameters = model.Parameters;
    var items = (IList<EntityVm>)model.Data;
}
<div id="entity-items" get-hosts-url="@Url.Action("GetHosts", "Host", new {area = "SmartWalk.Server"})">
        @Html.AntiForgeryTokenOrchard()    
        <div class="row">
            <div class="col-xs-8">
                <div class="input-group">
                    <input type="text" class="form-control" placeholder="@T("Type organizer name...")">
                    <span class="input-group-btn">
                        <button class="btn btn-default" type="button">@T("Search")</button>
                    </span>
                </div>
            </div>
        @if (parameters.IsLoggedIn) {
            <div class="col-xs-4">
                <form action="/organizers/create">
                    <button type="submit" class="btn btn-primary">@T("Create") <span class="hidden-xs">@T("Organizer")</span></button>
                </form>                
            </div>
        }
        </div>
        
    @if (parameters.IsLoggedIn) {
        <div class="gap">
            <small>
                <a href="/organizers?Parameters.Display=All">@T("All Organizers")</a>&nbsp;|&nbsp;<a href="/organizers?Parameters.Display=My">@T("My Organizers")</a>
            </small>
        </div>
    }

        <div class="floating-container small-gap">
        @foreach (var item in items) {
            <a class="thumbnail floating bg-image-container" href="@Url.Action("View", new {entityId = item.Id})">
                <div class="header">
                    <h3>@item.DisplayName</h3>
			
                    <img class="scale" data-scale="best-fill" data-align="center" src="@item.Picture">
                </div>
				
                <!-- TODO: to render address
                <div class="info">
                    <h4></h4>
                </div> -->
            </a>
        }
            <!-- ko template: {name: "EntityItemTemplate", foreach: Items() } -->    
            <!-- /ko -->
            <div class="clearfix"></div>
        </div>                   
    </div>

<script type="text/html" id="EntityItemTemplate">
    <a class="thumbnail floating bg-image-container" data-bind="attr: {href: '/organizer/' + Id()}">
        <div class="header">
            <h3 data-bind="text: Name"></h3>
			
            <img class="scale" data-scale="best-fill" data-align="center" data-bind="attr: {src: Picture}">
        </div>
				
        <!-- TODO: to render address
        <div class="info">
            <h4></h4>
        </div>-->
    </a>
</script>

@using (Script.Foot())
{
<script type="text/javascript">
    HostsViewModel = function(data, url) {
        HostsViewModel.superClass_.constructor.call(this, data, url);
    };

    inherits(HostsViewModel, ListViewModel);

    HostsViewModel.prototype.addItem = function(data) {
        this.Items.push(new EntityViewModelBase(data));
        $("img.scale").imageScale();
    };

    $(document).ready(function() {
        var viewModel = new HostsViewModel(@Html.Raw(Json.Encode(parameters)), $("#entity-items").attr("get-hosts-url"));
            ko.applyBindings(viewModel, document.getElementById('entity-items'));
        });
    
    $(function() {
        $("img.scale").imageScale();
    });
</script>
}