@{
    Style.Require("SmartWalk.GoogleMaps");
    Style.Require("jQueryUI_Orchard");
    Style.Require("FSquare.Autocomplete");


    Script.Require("jQueryUI").AtHead();
    Script.Require("FSquare.Autocomplete").AtHead();
    Script.Require("SmartWalk.GoogleMaps").AtHead();
}
<input id="pac-input" class="controls" type="text" placeholder="Enter a location">
<div id="type-selector" class="controls">
    <input type="radio" name="type" id="changetype-all" checked="checked">
    <label for="changetype-all">All</label>

    <input type="radio" name="type" id="changetype-establishment">
    <label for="changetype-establishment">Establishments</label>

    <input type="radio" name="type" id="changetype-geocode">
    <label for="changetype-geocode">Geocodes</label>
</div>
<div id="map-canvas"></div>
<div id="fq-places">
    <div class="ui-widget">
            <label for="venue">Venue: </label>
            <input id="venue"/>
    </div>
    <div>
        <input type="hidden" id="venue-id"/>
        <div class="categoryIconContainer">
            <img id="venue-icon" src="" class="ui-state-default" alt=""/>    
        </div>
        <div id="venue-name" class="autocomplete-name"></div>
        <div id="venue-address" class="autocomplete-detail"></div>
	    <div id="venue-cityLine" class="autocomplete-detail"></div>
    </div>
</div>
<textarea id="gLog" style="width: 520px; height:240px">oppa</textarea>
<script>    
    function initialize() {
        var mapOptions = {
            center: new google.maps.LatLng(-33.8688, 151.2195),
            zoom: 13
        };
        var map = new google.maps.Map(document.getElementById('map-canvas'),
          mapOptions);

        var input = (document.getElementById('pac-input'));
        var types = document.getElementById('type-selector');
        map.controls[google.maps.ControlPosition.TOP_LEFT].push(input);
        map.controls[google.maps.ControlPosition.TOP_LEFT].push(types);

        var autocomplete = new google.maps.places.Autocomplete(input);
        autocomplete.bindTo('bounds', map);

        var infowindow = new google.maps.InfoWindow();
        var marker = new google.maps.Marker({
            map: map
        });

        google.maps.event.addListener(autocomplete, 'place_changed', function() {
            infowindow.close();
            marker.setVisible(false);
            var place = autocomplete.getPlace();
            if (!place.geometry) {
                return;
            }

            // If the place has a geometry, then present it on a map.
            if (place.geometry.viewport) {
                map.fitBounds(place.geometry.viewport);
            } else {
                map.setCenter(place.geometry.location);
                map.setZoom(17);  // Why 17? Because it looks good.
            }
            marker.setIcon(({
            url: place.icon,
            size: new google.maps.Size(71, 71),
            origin: new google.maps.Point(0, 0),
            anchor: new google.maps.Point(17, 34),
            scaledSize: new google.maps.Size(35, 35)
            }));
            
            marker.setPosition(place.geometry.location);
            marker.setVisible(true);

            var address = '';
            if (place.address_components) {
                address = [
                    (place.address_components[0] && place.address_components[0].short_name || ''),
                    (place.address_components[1] && place.address_components[1].short_name || ''),
                    (place.address_components[2] && place.address_components[2].short_name || '')
                ].join(' ');

                $("#gLog").text(JSON.stringify(place));
                
                $("#venue").foursquareAutocomplete({
                    'latitude': place.geometry.location.b.toFixed(2),
                    'longitude': place.geometry.location.d.toFixed(2),
                    'client_id': "X23YBMO2PDIY1G3HA1URSGC2BEHLMIATUYLWDJ1ZGY3TXXF4",
                    'client_secret': "H4BX4R13M3XY10XNFMNVEUCH24CYRPFUE0VZXLA0WMONKXZG",
                    'minLength': 3,
                    'search': function (event, ui) {
                        $("#gLog").text(JSON.stringify(ui.item));
                        
                        $("#venue-name").html(ui.item.name);
                        $("#venue-id").val(ui.item.id);
                        $("#venue-address").html(ui.item.address);
                        $("#venue-cityLine").html(ui.item.cityLine);
                        $("#venue-icon").attr("src", ui.item.photo);

                        infowindow.close();
                        marker.setVisible(false);

                        var point = new google.maps.LatLng(ui.item.location.lat, ui.item.location.lng);

                        map.setCenter(point);
                        map.setZoom(20);
                        
                        marker.setPosition(point);
                        marker.setVisible(true);

                        infowindow.setContent('<div><strong>' + ui.item.name + '</strong><br>' + ui.item.address);
                        infowindow.open(map, marker);                                                
                        return false;
                    },
                    'onError': function (errorCode, errorType, errorDetail) {
                        var message = "Foursquare Error: Code=" + errorCode + ", errorType= " + errorType + ", errorDetail= " + errorDetail;
                        $("#gLog").text(message);
                    }

                });
            }

            infowindow.setContent('<div><strong>' + place.name + '</strong><br>' + address);
            infowindow.open(map, marker);
        });

        // Sets a listener on a radio button to change the filter type on Places
        // Autocomplete.
        function setupClickListener(id, types) {
            var radioButton = document.getElementById(id);
            google.maps.event.addDomListener(radioButton, 'click', function() {
                autocomplete.setTypes(types);
            });
        }

        setupClickListener('changetype-all', []);
        setupClickListener('changetype-establishment', ['establishment']);
        setupClickListener('changetype-geocode', ['geocode']);
    }

    google.maps.event.addDomListener(window, 'load', initialize);
</script>		