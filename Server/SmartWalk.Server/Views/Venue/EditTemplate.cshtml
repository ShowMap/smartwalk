@using SmartWalk.Server.ViewModels
@{
    Style.Require("SmartWalk");

    Script.Require("jQueryUI").AtHead();
    Script.Require("SmartWalk.ViewModels.Entity.Extended").AtHead();
    
    var venue = (EntityVm)Model;
    var actionCaption = venue.Id == 0 ? T("Add <span class=\"hidden-xs\">Venue</span>") : T("Save <span class=\"hidden-xs\">Venue</span>");
}
<div id="edit-venue-form" 
     save-venue-url="@Url.Action("SaveOrAdd", "Venue", new {area = "SmartWalk.Server"})" 
     get-address-url ="@Url.Action("GetAddress", "Event", new {area = "SmartWalk.Server"})"
     save-address-url ="@Url.Action("SaveAddress", "Event", new {area = "SmartWalk.Server"})"
     delete-addresses-url ="@Url.Action("DeleteAddresses", "Event", new {area = "SmartWalk.Server"})"
     get-contact-url ="@Url.Action("GetContact", "Event", new {area = "SmartWalk.Server"})"
     save-contact-url ="@Url.Action("SaveContact", "Event", new {area = "SmartWalk.Server"})"
     delete-contacts-url ="@Url.Action("DeleteContacts", "Event", new {area = "SmartWalk.Server"})">
    @Html.AntiForgeryTokenOrchard()
    <div id="venue-panel">
        <div class="row">
            <div class="col-xs-8">
                <div class="form-group">
                    <label class="titleLabel" for="venueNameTextInput">@T("Venue Name"):</label>
                    <input id="venueNameTextInput" class="form-control" type="text" placeholder="@T("Type venue name...")" data-bind="value: Name" />
                </div>
            </div>
            <div class="col-xs-4 text-right">
                <button type="button" class="btn btn-success btn-top" data-bind="click: saveOrAdd">@actionCaption</button>
            </div>
        </div>

        <!--<textarea style="width: 100%" id="tasks" data-bind="value: ko.toJSON($root.AllAddresses)"></textarea>-->
        
        @Html.Partial("../Entity/EditTemplate")

        <div class="row double-gap">
            <div class="col-xs-4">
        @if (venue.Id != 0) {
            using(Html.BeginForm("Delete", "Venue", FormMethod.Get)) {
                <input type="hidden" name="entityId" value="@venue.Id" />
                <button type="submit" class="btn btn-danger" >@T("Delete") <span class="hidden-xs">@T("Venue")</span></button>
            }
        }
            </div>
            <div class="col-xs-8 text-right">                
                <button type="submit" class="btn btn-default" data-bind="click: cancel">@T("Cancel")</button>
                <button type="button" class="btn btn-success" data-bind="click: saveOrAdd">@actionCaption</button>
            </div>
		</div>
    </div>
</div>

@Html.Partial("../Entity/Templates")

@using (Script.Foot()) {
<script>
    $(function() {
        var form = $("#edit-venue-form");
        var data = @Html.Raw(Json.Encode(venue));
        var settings = {
            entityForm: form,
            entityCancelEvent: EntityViewModelExtended.VENUE_CANCEL_EVENT,
            entitySaveEvent: EntityViewModelExtended.VENUE_SAVE_EVENT,

            entitySaveUrl: form.attr("save-venue-url"),

            addressGetUrl: form.attr("get-address-url"),
            addressSaveUrl: form.attr("save-address-url"),
            addressDeleteUrl: form.attr("delete-addresses-url"),
            addressView: "ViewAddressTemplate",
            addressEditView: "EditAddressTemplate",

            contactGetUrl: form.attr("get-contact-url"),
            contactSaveUrl: form.attr("save-contact-url"),
            contactDeleteUrl: form.attr("delete-contacts-url"),
            contactView: "ViewContactTemplate",
            contactEditView: "EditContactTemplate",
            contactTypes: ["@T("E-mail")", "@T("Web")", "@T("Phone")"],
        };

        var vmVenue = new EntityViewModelExtended(settings, data);
        ko.applyBindings(vmVenue, document.getElementById('edit-venue-form'));
    });
</script>
}