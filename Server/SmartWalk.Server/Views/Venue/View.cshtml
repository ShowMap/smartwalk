@using SmartWalk.Server.Records
@using SmartWalk.Server.ViewModels
@using System.Text.RegularExpressions
@{
    Style.Require("SmartWalk");
    Style.Require("TextCollapse");

    Script.Require("jQueryUI").AtFoot();
    Script.Require("SmartWalk.ViewModels.Event").AtFoot();
    Script.Require("ImageScale").AtFoot();
    Script.Require("TextCollapse").AtFoot();

    var model = (ViewParametersVm) Model;
    var venue = (EntityVm)model.Data;
}
<div id="view-venue-form" title="@T("Add Host")" get-venue-events="@Url.Action("GetEvents", "Venue", new {area = "SmartWalk.Server"})">
    @Html.AntiForgeryTokenOrchard()
    <div class="bg-image-container page-header-image">
        <div class="header">
            <h2>
                @if (!model.IsReadOnly) {
                    <button type="button" class="btn" id="btn-edit-venue">@T("Edit Venue")</button>
                }
                @venue.DisplayName
            </h2>
            @if (!string.IsNullOrEmpty(venue.Picture)) {
                <img class="scale" data-scale="best-fill" data-align="center" src="@venue.Picture" />
            }
        </div>
			
        <div class="info addresses-container">
            @foreach (var address in venue.AllAddresses) {
                <div><h4><address>@Regex.Replace(address.Address, @"\s+", " ")</address>@if (!string.IsNullOrEmpty(address.Tip)) {<i class="description">@address.Tip</i>}</h4></div>                        
            }
        </div>	
    </div>

@Html.Partial("../Entity/View", model)
</div>

<script type="text/html" id="eventItemTemplate">
    <tr>
        <td>
            <a data-bind="attr: {href: '/event/'+Id()}, text: Title"></a><br/>
            <span class="description" data-bind="text: Description"></span>
        </td>
        <td data-bind="text: StartTime"></td>        
    </tr>       
</script>

@using (Script.Foot())
{
<script type="text/javascript">
    $(document).ready(function() {
        $("#btn-edit-venue").click(function() {
            window.location.href = "@Url.Action("View")" + "/edit";
        });

        function eventsViewModel() {
            var self = this;

            self.EventItems = ko.observableArray();

            self.loadData = function() {
                var ajdata = ko.toJSON({ entityId: @venue.Id });
                var urlUpdate = $("#view-venue-form").attr("get-venue-events");

                ajaxJsonRequest(ajdata, urlUpdate, function(data) {
                    if (data) {
                        self.EventItems($.map(data, function(item) { return new EventViewModel(item); }));                            
                    }
                });
            };

            self.loadData();
        }

        ko.applyBindings(new eventsViewModel(), document.getElementById('view-venue-form'));
    });
</script>
}