@{
    Script.Require("ko.autocomplete").AtFoot();
    
    // var imagePath = Href("../../Images/leaflet");
    // TODO: If use Leaflet again, paste this into mappicker settings:  imagePath: '@imagePath', 
}

<script type="text/html" id="autocompleteAddressTemplate">
    <a data-bind="text: formatted_address"></a>
</script>

<script type="text/html" id="viewAddressTemplate">
    <tr>
		<td data-bind="text: address() || ('(' + latitude() + ',' + longitude() + ')'), click: function () { if ($root.isEnabled()) $root.addressesManager.editItem($data) } "></td>
		<td class="td-align td-valign"><button type="button" class="remove close" data-bind="enable: $root.isEnabled(), click: function() { if(confirm('@T("Are you sure you want to delete the address?")')) $root.addressesManager.deleteItem($data); }"><span class="glyphicon glyphicon-remove"></span></button></td>
	</tr>
</script>

<script type="text/html" id="editAddressTemplate">
    <tr>
        <td colspan="2" class="editing-container" data-bind="fadeIn: 'fast', scroll: 'slow'">
            <div class="well">
                <div class="row">
                    <div class="col-sm-6">
                        <div class="form-group">
                            <label for="addressTextInput">@T("Address"):</label>
                            <input class="form-control" id="addressTextInput" placeholder="@T("Type address...")" data-bind="
                                jqAuto: {
                                    value: ko.computed({ 
                                        read: function() { return address() || null; }, 
                                        write: function (value) { $data.address(value); }}),
                                    dataValue: addressData,
                                    source: $root.getAutocompleteAddresses,
                                    inputProp: 'formatted_address',
                                    valueProp: 'formatted_address',
                                    template: 'autocompleteAddressTemplate'
                                }" />
                        </div>
									
                        <div class="form-group" data-bind="validationElement: latitude">
                            <label for="latitudeTextInput">@T("Latitude"):</label>
                            <input type="text" class="form-control" id="latitudeTextInput" data-bind="value: latitude" />
                        </div>
									
                        <div class="form-group" data-bind="validationElement: longitude">
                            <label for="longitudeTextInput">@T("Longitude"):</label>
                            <input type="text" class="form-control" id="longitudeTextInput" data-bind="value: longitude" />
                        </div>
                        
                        <div class="form-group" data-bind="validationElement: tip">
                            <label for="tipTextInput">@T("Tip"):</label>
                            <input type="text" class="form-control" id="tipTextInput" data-bind="value: tip" />
                        </div>
                    </div>				                    
                    <div class="col-sm-6">
                        <div class="form-group">
                            <label for="addressTextInput">&nbsp;</label>
                            <div class="map-picker-container" data-bind="mappicker: mapPoint, settings: { zoomLevel: 16, type: 'google' }"></div>
                            <span class="text-muted map-picker-tip">@T("Click on map to update Address coordinate")</span>
                        </div>
                    </div>
                </div>
							
                <div class="text-right">
                    <div class="form-group">
                        <button type="button" class="btn btn-default" data-bind="click: function () { $root.addressesManager.cancelItem($data) }">@T("Cancel")</button>
                        <button type="button" class="btn btn-success" data-bind="click: function () { $root.addressesManager.saveItem($data) }">@T("Save Address")</button>
                    </div>
                </div>
            </div>
        </td>
    </tr>
</script>

<script type="text/html" id="viewContactTemplate">
    <tr>
        <td data-bind="text: $root.getContactType($data), click: function () { if ($root.isEnabled()) $root.contactsManager.editItem($data) }"></td>
        <td data-bind="
            text: (title() ? title() + ': ' : '') + (contact() || ''), 
            click: function () { if ($root.isEnabled()) $root.contactsManager.editItem($data) }"></td>
		<td class="td-align td-valign"><button type="button" class="remove close" data-bind="enable: $root.isEnabled(), click: function() { if(confirm('@T("Are you sure you want to delete the contact?")')) $root.contactsManager.deleteItem($data); }"><span class="glyphicon glyphicon-remove"></span></button></td>
	</tr>
</script>

<script type="text/html" id="editContactTemplate">
    <tr>
        <td colspan="3" class="editing-container"  data-bind="fadeIn: 'fast', scroll: 'slow'">
            <div class="well">
                <div class="row">
                    <div class="col-sm-3">
                        <div class="form-group">
                            <label for="addressTextInput">@T("Type"):</label>                            
                            <select class="form-control" data-bind="value: type, foreach: $root.settings.contactTypes">
                                <option data-bind="text: $data, value: $root.settings.contactTypes.indexOf($data)"></option>                                
                            </select>
                        </div>
                    </div>
								
                    <div class="col-sm-9">	
                        <div class="form-group" data-bind="validationElement: title">
                            <label for="contactTitleTextInput">@T("Title"):</label>
                            <input type="text" class="form-control" id="contactTitleTextInput" data-bind="value: title" />
                        </div>
									
                        <div class="form-group" data-bind="validationElement: contact">
                            <label for="contactValueTextInput">@T("Contact"):</label>
                            <input type="text" class="form-control" id="contactValueTextInput" data-bind="value: contact" />
                        </div>
                    </div>
                </div>
							
                <div class="text-right">
                    <div class="form-group">
                        <button type="button" class="btn btn-default" data-bind="click: function () { $root.contactsManager.cancelItem($data) }">@T("Cancel")</button>
                        <button type="button" class="btn btn-success" data-bind="click: function () { $root.contactsManager.saveItem($data) }">@T("Save Contact")</button>
                    </div>
                </div>
            </div>
	    </td>
    </tr>
</script>