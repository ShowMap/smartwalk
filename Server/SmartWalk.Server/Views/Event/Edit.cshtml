@using SmartWalk.Server.ViewModels
@using SmartWalk.Server.Records

@Display(New.DatePickerLocalization())
@Display(New.TimePickerLocalization())

@{
    Style.Require("jQueryUI_Orchard");
    Style.Require("SmartWalk.ListEvent");

    //Script.Require("jQuery").AtHead();
    Script.Require("jQueryUI").AtHead();
    Script.Require("SmartWalk.ViewModels").AtHead();

    var eventItem = (EventMetadataVm)Model;
}

<div id="event-item" 
    save-event-url="@Url.Action("SaveEvent", "Event")" 
    save-show-url="@Url.Action("SaveShow", "Event")"
    get-show-url="@Url.Action("GetShow", "Event")"
    delete-show-url="@Url.Action("DeleteShow", "Event")"
    delete-event-url="@Url.Action("DeleteEvent", "Event")"
    delete-event-venue-url="@Url.Action("DeleteEventVenue", "Event")"
    add-event-venue-url="@Url.Action("AddEventVenue", "Event")"
    save-event-url="@Url.Action("SaveEvent", "Event")">
    @Html.AntiForgeryTokenOrchard()
    <!--<textarea style="width: 100%" id="tasks" data-bind="value: ko.toJSON($root)"></textarea>-->

    <div id="metadata-panel">
        <label for="hosts">@T("Host")</label>
        <select id="hosts" data-bind="options: AllHosts, optionsText: 'DisplayName', value: Host, optionsCaption: '@T("Select Host...")'"></select>
        <div class="ui-widget">
            <button id="add-place-button">@T("Add place")</button>
            <button id="add-host-button">@T("Add host")</button>
        </div>

        <label for="title">@T("Title")</label>
        <input type="text" id="title" data-bind="value: Title"/>
        
        <label for="description">@T("Description")</label>
        <textarea id="description" data-bind="value: Description"></textarea>
        
        <label for="start-time">@T("Start time")</label>
        <input type="text" data-bind="datepicker: StartTime, datepickerOptions: { showAnim: '' }" />
        
        <label for="end-time">@T("End time")</label>
        <input type="text" id="end-time" data-bind="datepicker: EndTime, datepickerOptions: { showAnim: '' }"/>
        
        @Html.LabelFor(m => eventItem.CombineType, @T("Combine type"))
        @Html.DropDownListFor(m => eventItem.CombineType,
                              Enum.GetNames(typeof(CombineType))
                                  .Select(u => new SelectListItem
                                  {
                                      Selected = (int)Enum.Parse(typeof(CombineType), u) == eventItem.CombineType,
                                      Text = @T(u).ToString(),
                                      Value = ((int)Enum.Parse(typeof(CombineType), u)).ToString()
                                  }), new Dictionary<string, object> { { "data-bind", "value:CombineType" } })
        
        @Html.LabelFor(m => eventItem.IsPublic, @T("Is public"))
        @Html.CheckBoxFor(m => eventItem.IsPublic, new Dictionary<string, object> { { "data-bind", "checked: IsPublic" } })
           
        <p>
            <button id="save-event-button" data-bind="click: $root.saveEvent">@T("Save event")</button>
            @{ using(Html.BeginForm("List", "Event", FormMethod.Get)) {                                
                                <input type="submit" value="@T("Cancel")" />
            }} 
        </p>
        
        <div data-bind="visible: Id() > 0">
            <p>@T("Venues")</p>
            <select id="other-venues" data-bind="options: OtherVenues, optionsText: 'Name', value: selectedVenue, optionsCaption: '@T("Select Venue...")    '"></select>
            <button id="add-event-venue-button" data-bind="click: $root.addVenue, enable: selectedVenue">@T("Add venue")</button>    
        </div>

        <div id="entity-items" data-bind="visible: Venues().length > 0 && Id() > 0">
            <table>                
                <tbody data-bind='template: {name: "EntityItemTemplate", foreach: Venues() }'></tbody>
            </table> 
            <button id="delete-event-button" data-bind="click: $root.deleteEvent">@T("Delete")</button>   
        </div>
        
        <!--
        <div id="shows-panel">
            <ul data-bind="visible: Shows().length > 0, foreach: Shows">
                <li>
                    <label data-bind="attr: { for: 'show-title-' + Id() }">@T("Title")</label>
                    <input type="text" data-bind="attr: {id:'show-title-' + Id()}, value: Title"/>
        
                    <label data-bind="attr: { for: 'show-description-' + Id() }">@T("Description")</label>
                    <textarea data-bind="attr: { id: 'show-description-' + Id() }, value: Description"></textarea>
                    
                    <a href="#" data-bind="click: $root.removeShow">Remove</a>                    
                </li>
            </ul>
            <button data-bind="click: addShow">@T("Add show")</button>        
        </div>-->
    </div>
</div>

<script type="text/html" id="EntityItemTemplate">
    <tr>
        <td><span data-bind="text: Name"></span></td>        
        <td><a href="#" data-bind="click: $root.addShow, visible: $root.selectedShow() == null || $root.selectedShow().Id() != 0 || $root.selectedShow().VenueId() != Id()">Add show</a> &nbsp; <a href="#" data-bind="    click: $root.deleteVenue">Delete</a></td>
    </tr>  
    <tr>
        <td>
        </td>
        <td>
            <table>
                <thead>
                    <tr>
                        <th><span>@T("Show")</span></th>
                        <th><span>@T("Action")</span></th>                
                    </tr>
                </thead>
                <tbody data-bind='template: {name: $root.getShowView, foreach: Shows() }'></tbody>
            </table>    
        </td>
    </tr>   
</script>

<script type="text/html" id="ShowItemTemplate">
    <tr data-bind="css: {'alt': $index() % 2 === 1}">        
        <td><span data-bind="text: Description"></span></td>        
        <td><a href="#" data-bind="click: $root.selectedShow">Edit</a></td>
    </tr>      
</script>

<script type="text/html" id="ShowItemTemplateEdit">
    <tr>
        <td colspan="2">
            <table>
                <tr>
                    <td>
                        <label for="show-title">@T("Title")</label>
                        <input id="show-title" type="text" data-bind="value: Title"/>
                    </td>
                    <td>
                        <label for="show-description">@T("Description")</label>
                        <textarea id="show-description" data-bind="value: Description"></textarea>
                    </td>
                </tr>
                <tr>
                    <td>
                        <label for="show-start-date">@T("Start date")</label>
                        <input id="show-start-date" type="text" data-bind="datepicker: StartDate, datepickerOptions: { showAnim: '' }" />   
                    </td>
                    <td>
                        <label for="show-start-time">@T("Start time")</label>
                        <input id="show-start-time" type="text" data-bind="timepicker: StartTime, timepickerOptions: { stepMinute: 5 }" />
                    </td>
                </tr>
                <tr>
                    <td>
                        <label for="show-end-date">@T("End date")</label>
                        <input id="show-end-date" type="text" data-bind="datepicker: EndDate, datepickerOptions: { showAnim: '' }"/>
                    </td>
                    <td>
                        <label for="show-end-time">@T("End time")</label>
                        <input id="show-end-time" type="text" data-bind="timepicker: EndTime, timepickerOptions: { stepMinute: 5 }" />
                    </td>
                </tr>
                <tr>
                    <td>
                        <label for="show-picture">@T("Picture")</label>
                        <input type="text" id="show-picture" data-bind="value: Picture"/>
                    </td>
                    <td>
                        <label for="show-detailsurl">@T("Details URL")</label>
                        <input id="show-detailsurl" type="text" data-bind="value: DetailsUrl"/>
                    </td>
                </tr>
                <tr>
                    <td>
                        <button id="save-show-button" data-bind="click: $root.saveShow">@T("Save")</button>
                        <button id="cancel-show-button" data-bind="click: $root.cancelShow">@T("Cancel")</button>
                    </td>
                    <td>
                        <button id="delete-show-button" data-bind="click: $root.deleteShow">@T("Delete")</button>                        
                    </td>
                </tr>
            </table>
        </td>
    </tr>      
</script>

<script language="javascript">        

    (function ($) {        
        $(document).ready(function () {
            var vm = new EventViewModel(@Html.Raw(Json.Encode(eventItem)));

            vm.getShowView = function (item) {
                return item === vm.selectedShow() ? 'ShowItemTemplateEdit' : "ShowItemTemplate";
            };

            vm.cancelShow = function (item) {
                if (item.Id() == 0) {
                    item.State(2);
                    vm.selectedShow(null);
                } else {
                    var ajdata = ko.toJSON(item);
                    var urlUpdate = $("#event-item").attr("get-show-url");

                    var config = {
                        async: true,
                        url: urlUpdate,
                        type: "POST",
                        data: ajdata,
                        dataType: "json",
                        cache: false,
                        contentType: "application/json; charset=utf-8",
                        error: function(e) {
                            //window.location.href = "@Url.Action("List")";
                        },
                        success: function(data) {
                            item.loadData(data);
                            vm.selectedShow(null);
                        }
                    };
                    $.ajax(config);
                }
            };

            vm.addShow = function (item) {
                vm.selectedShow(item.addShow()); 
                //item.addShow();
            };
           
            vm.deleteEvent = function (item) {
                var ajdata = ko.toJSON(item);
                var urlUpdate = $("#event-item").attr("delete-event-url");

                var config = {
                    async: true,
                    url: urlUpdate,
                    type: "POST",
                    data: ajdata,
                    dataType: "json",
                    cache: false,
                    contentType: "application/json; charset=utf-8",
                    error: function (e) {
                        //window.location.href = "@Url.Action("List")";
                    },
                    success: function (data) {
                        window.location.href = "@Url.Action("List")";
                    }
                };
                $.ajax(config);
            };

            vm.deleteShow = function(item) {                
                var ajdata = ko.toJSON(item);
                var urlUpdate = $("#event-item").attr("delete-show-url");

                var config = {
                    async: true,
                    url: urlUpdate,
                    type: "POST",
                    data: ajdata,
                    dataType: "json",
                    cache: false,
                    contentType: "application/json; charset=utf-8",
                    error: function (e) {
                        //window.location.href = "@Url.Action("List")";
                    },
                    success: function (data) {
                        item.State(2);
                    }
                };
                $.ajax(config);
            };
            
            vm.deleteVenue = function(item) {                
                var ajdata = ko.toJSON(item);
                var urlUpdate = $("#event-item").attr("delete-event-venue-url");

                var config = {
                    async: true,
                    url: urlUpdate,
                    type: "POST",
                    data: ajdata,
                    dataType: "json",
                    cache: false,
                    contentType: "application/json; charset=utf-8",
                    error: function (e) {
                        //window.location.href = "@Url.Action("List")";
                    },
                    success: function (data) {
                        item.State(3);
                    }
                };
                $.ajax(config);
            };

            vm.addVenue = function() {
                var item = vm.selectedVenue();
                var ajdata = ko.toJSON(item);
                var urlUpdate = $("#event-item").attr("add-event-venue-url");
                
                var config = {
                    async: true,
                    url: urlUpdate,
                    type: "POST",
                    data: ajdata,
                    dataType: "json",
                    cache: false,
                    contentType: "application/json; charset=utf-8",
                    error: function (e) {
                        //window.location.href = "@Url.Action("List")";
                    },
                    success: function (data) {
                        item.AllShows.push(new ShowViewModel(data));
                        item.State(0);
                    }
                };
                $.ajax(config);
            };

            vm.saveShow = function(item) {
                var ajdata = ko.toJSON(item);
                var urlUpdate = $("#event-item").attr("save-show-url");

                var config = {
                    async: true,
                    url: urlUpdate,
                    type: "POST",
                    data: ajdata,
                    dataType: "json",
                    cache: false,
                    contentType: "application/json; charset=utf-8",
                    error: function (e) {
                        //window.location.href = "@Url.Action("List")";
                    },
                    success: function (data) {                        
                        if (item.Id() == 0 || item.Id() != data)
                            item.Id(data);
                        
                        vm.selectedShow(null);
                    }
                };
                $.ajax(config);
            };

            vm.saveEvent = function(item) {
                var ajdata = ko.toJSON(item);                
                var urlUpdate = $("#event-item").attr("save-event-url");
                
                var config = {
                    async: true,
                    url: urlUpdate,
                    type: "POST",
                    data: ajdata,
                    dataType: "json",
                    cache: false,
                    contentType: "application/json; charset=utf-8",
                    error: function (e) {
                        //window.location.href = "@Url.Action("List")";
                    },
                    success: function (data) {                        
                        if (item.Id() == 0)
                            item.loadData(data);
                    }
                };
                $.ajax(config);                
            };


            ko.applyBindings(vm, document.getElementById('event-item'));            
        });
    })(jQuery);
</script>