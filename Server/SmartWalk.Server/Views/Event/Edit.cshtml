@using SmartWalk.Server.ViewModels
@using SmartWalk.Server.Records

@Display(New.DatePickerLocalization())
@Display(New.TimePickerLocalization())

@{
    Style.Require("jQueryUI_Orchard");
    //Style.Require("SmartWalk.ListEvent");

    //Script.Require("jQuery").AtHead();
    Script.Require("jQueryUI").AtHead();
    Script.Require("SmartWalk.ViewModels").AtHead();

    var eventItem = (EventMetadataVm)Model;
    var cancelAction = eventItem.Id == 0 ? Url.Action("List") : Url.Action("View", new { entityId = @eventItem.Id });
}

<div id="event-item" 
    save-event-url="@Url.Action("SaveEvent", "Event")" 
    save-show-url="@Url.Action("SaveShow", "Event")"
    get-show-url="@Url.Action("GetShow", "Event")"
    delete-show-url="@Url.Action("DeleteShow", "Event")"
    delete-event-url="@Url.Action("DeleteEvent", "Event")"
    delete-event-venue-url="@Url.Action("DeleteEventVenue", "Event")"
    save-event-venue-url="@Url.Action("SaveEventVenue", "Event")"
    save-event-url="@Url.Action("SaveEvent", "Event")">
    @Html.AntiForgeryTokenOrchard()
    <!--<textarea style="width: 100%" id="tasks" data-bind="value: ko.toJSON($root)"></textarea>-->

    <div id="metadata-panel">
        <div class="row">
			<div class="col-xs-8">
				<div class="form-group">
					<input class="form-control" type="text" placeholder="@T("Type event name...")" data-bind="value: Title" />
				</div>
			</div>
			<div class="col-xs-4 text-right">
				<button type="button" class="btn btn-success" data-bind="click: $root.saveEvent">@T("Save Event")</button>
			</div>
		</div>
        
        <div class="row">
			<div class="col-sm-4">
				<div class="form-group">
					<label for="startDateInput">@T("Start Date"):</label>
					<input type="date" class="form-control" id="startDateInput" data-bind="datepicker: StartTime, datepickerOptions: { showAnim: '' }">
				</div>
			</div>
			<div class="col-sm-4">
				<div class="form-group">
					<label for="endDateInput">@T("End Date"):</label>
					<input type="date" class="form-control" id="endDateInput" data-bind="datepicker: EndTime, datepickerOptions: { showAnim: '' }">
				</div>
			</div>
			<div class="col-sm-4">
				<div class="form-group">
					<label for="visibilityButtonsGroup">@T("Visibility"):</label><br/>
					<div class="btn-group" id="visibilityButtonsGroup" data-bind="switcher: IsPublic, switcherOptions: { values: [{'val':true, 'disp':'@T("Public")'}, {'val':false, 'disp':'@T("Private")'}]}"></div>
				</div>
			</div>
		</div>	    

        <div class="row">
            <div class="col-sm-8">
                <div class="form-group">
                    <label for="organizedByComboBox">@T("Organized By"):</label>
                    <div class="input-group">
                        <!--<input type="text" class="form-control" id="organizedByComboBox" >-->
                        <select class="form-control" id="organizedByComboBox" data-bind="options: AllHosts, optionsText: 'DisplayName', value: Host, optionsCaption: '@T("Select Organizer...")'"></select>
                        <span class="input-group-btn">
                            <button type="button" class="btn btn-default" id="createOrganizerButton">@T("Create Organizer...")</button>
                        </span>
                    </div>
					
                </div>
            </div>
            @*<div class="col-sm-4">
				<div class="form-group">
					<label for="combineTypeButtonsGroup">@T("Combine Type"):</label><br/>
					<div class="btn-group" id="combineTypeButtonsGroup" data-bind="switcher: CombineType, switcherOptions: { values: [{'val':0, 'disp':'@T("None")    '}, {'val':1, 'disp':'@T("By Venue")    '}, {'val':2, 'disp':'@T("By Organizer")    '}]}"></div>
				</div>
			</div>*@
		</div>		       

        <div class="row">
			<div class="col-sm-8">
				<div class="form-group">
					<label for="pictureTextInput">@T("Picture"):</label>
					<input id="pictureTextInput" class="form-control" type="text" placeholder="@T("Paste picture URL")" data-bind="value: Picture"/>
				</div>
			</div>
		</div>
		
		<div class="row">
			<div class="col-sm-8">
				<div class="form-group">
					<label for="descriptionTextArea">@T("Description"):</label>
					<textarea class="form-control" id="descriptionTextArea" data-bind="value: Description"></textarea>
				</div>
			</div>
		</div>                                                               
        
        <table class="table table-hover">
			<thead>
				<tr>
					<th><h4>@T("Venues and Shows")</h4></th>
					<th>@T("Show Time")</th>
					<th class="td-align">
						<div class="input-group-btn" style="display:inline">
							<button type="button" class="btn btn-default dropdown-toggle" data-toggle="dropdown">
								<input type="checkbox" value="" /> <span class="caret"></span>
							</button>
							<ul class="dropdown-menu">
								<li><a href="#">@T("Duplicate")</a></li>
								<li><a href="#">@T("Delete")</a></li>
							</ul>
						</div>
					</th>
				</tr>
			</thead>
			<tbody data-bind='template: {name: "EntityItemTemplate", foreach: Venues() }'></tbody>
		</table>
        
        <button type="button" class="btn btn-default" data-bind="click: $root.addVenue">@T("Add Venue")</button>
		
		<div class="row double-gap">
			<div class="col-xs-4">
				<button type="button" class="btn btn-danger" data-bind="click: $root.deleteEvent">@T("Delete Event")</button>
			</div>
		    <div class="col-xs-8 text-right">
		        <form method="get" action="@cancelAction">
		            <button type="submit" class="btn btn-default" >@T("Cancel")</button>
		            <button type="button" class="btn btn-success" data-bind="click: $root.saveEvent">@T("Save Event")</button>
		        </form>		        
		    </div>
		</div>

        <div data-bind="visible: Id() > 0">
            <p>@T("Venues")</p>
            <select id="other-venues" data-bind="options: OtherVenues, optionsText: 'Name', value: selectedVenue, optionsCaption: '@T("Select Venue...")'"></select>
            <button id="add-event-venue-button" data-bind="click: $root.addVenue, enable: selectedVenue">@T("Add venue")</button>    
        </div>        
    </div>
</div>

@Html.Partial("../Host/EditTemplate", new EntityVm{Id = 0, EventMetedataId = eventItem.Id, UserId = eventItem.UserId, State = VmItemState.Normal})

<script type="text/html" id="EntityItemTemplate">
    <tr data-bind="template: {name: $root.getVenueView }"></tr>
    <!-- ko template: {name: $root.getShowView, foreach: Shows() } -->    
    <!-- /ko -->   
</script>

<script type="text/html" id="EventVenueItemTemplate">
    <td class="venue" colspan="2">
        <div>
            <a data-bind="attr:{href: '/venue/'+Id()}"><img data-bind="attr: {src: Picture }"/></a>
            <a data-bind="attr:{href: '/venue/'+Id()}"><h4 data-bind="text: DisplayName"></h4></a>
            <address data-bind="text: Addresses().length > 0 ? Addresses()[0].Address() : '', click: $root.selectedItem"></address>
            <i class="description" data-bind="text: Addresses().length > 0 ? Addresses()[0].Tip() : '', click: $root.selectedItem"></i>
        </div>
        <div class="clearfix"></div>
        <button type="button" class="btn btn-default gap" data-bind="click: $root.addShow">@T("Create Show")</button>
    </td>
    <td class="td-valign td-align"><input type="checkbox" value=""></td>    
</script>

<script type="text/html" id="EventVenueItemTemplateEdit">
    <td colspan="3" class="editing-container">
        <div class="well">
        <div class="row">
            <div class="col-sm-8">
                <div class="form-group">
                    <label for="venueComboBox">@T("Venue"):</label>
                    <div class="input-group">
                        <select id="venueComboBox" class="form-control pull-left" data-bind="options: $root.ComputedVenues, optionsText: 'Name', value: $data, optionsCaption: '@T("Select Venue...")    '"></select>
                        <span class="input-group-btn">
                            <button type="button" class="btn btn-default pull-right" id="createVenueButton">@T("Create Venue...")</button>
                        </span>
                    </div>
                </div>
            </div>
        </div>
									   							
        <div class="row">			
                <div class="col-sm-8"></div>
                <div class="col-sm-4 text-right">
				    <div class="form-group">
					    <label for="saveShowButton">&nbsp;</label><br/>
					    <button type="button" class="btn btn-default" data-bind="click: $root.cancelVenue">@T("Cancel")</button>
					    <button type="button" class="btn btn-success" id="saveVenueButton" data-bind="click: $root.saveVenue">@T("Save Venue")</button>
				    </div>
			    </div>
		    </div>
	    </div>
    </td>
</script>

<script type="text/html" id="ShowItemTemplate">
    <tr data-bind="click: $root.selectedItem">
        <td>
            <span data-bind="text: Title"></span>
            <br/>
            <span class="description" data-bind="text: Description"></span>
        </td>
        
        <td data-bind="text: TimeText"></td>
        <td class="td-align"><input type="checkbox" value=""></td>
    </tr>    
</script>

<script type="text/html" id="ShowItemTemplateEdit">
    <tr>
		<td colspan="3" class="editing-container">
			<div class="well">							
				<div class="row">
					<div class="col-sm-8">
						<div class="form-group">
							<label for="titleTextInput">@T("Title"):</label>
							<input type="text" class="form-control" id="titleTextInput" data-bind="value: Title">
						</div>
									
						<div class="form-group">
							<label for="showDescriptionTextArea">@T("Description"):</label>
							<textarea class="form-control" id="showDescriptionTextArea" data-bind="value: Description"></textarea>
						</div>
					</div>
							
					<div class="col-sm-2">
						<div class="form-group">
							<label for="showStartTimeInput">@T("Start Time"):</label><br/>
							<input type="time" class="form-control" id="showStartTimeInput" data-bind="timepicker: StartTime, timepickerOptions: { stepMinute: 5 }" />
						</div>
									
						<div class="form-group">
							<label for="showStartDateInput">@T("Start Date"):</label><br/>
							<input type="date" class="form-control" id="showStartDateInput" data-bind="datepicker: StartDate, datepickerOptions: { showAnim: '' }" />
						</div>
					</div>
							
					<div class="col-sm-2">
						<div class="form-group">
							<label for="showStartTimeInput">@T("End Time"):</label><br/>
							<input type="time" class="form-control" id="showStartTimeInput" data-bind="timepicker: EndTime, timepickerOptions: { stepMinute: 5 }" />
						</div>
									
						<div class="form-group">
							<label for="showEndDateInput">@T("End Date"):</label><br/>
							<input type="date" class="form-control" id="showEndDateInput" data-bind="datepicker: EndDate, datepickerOptions: { showAnim: '' }" />
						</div>
					</div>
				</div>
							
				<div class="row">
					<div class="col-sm-4">
						<div class="form-group">
							<label for="pictureTextInput">@T("Picture"):</label>
							<input type="text" class="form-control" id="pictureTextInput" data-bind="value: Picture">
						</div>
					</div>
					<div class="col-sm-4">
						<div class="form-group">
							<label for="detailsURLTextInput">@T("Details URL"):</label><br/>
							<input type="text" class="form-control" id="detailsURLTextInput" data-bind="value: DetailsUrl" />
						</div>
					</div>
					<div class="col-sm-4 text-right">
						<div class="form-group">
							<label for="saveShowButton">&nbsp;</label><br/>
							<button type="button" class="btn btn-default" data-bind="click: $root.cancelShow">@T("Cancel")</button>
							<button type="button" class="btn btn-success" id="saveShowButton" data-bind="click: $root.saveShow">@T("Save Show")</button>
						</div>
					</div>
				</div>
			</div>
		</td>
	</tr>         
</script>

<script language="javascript">        

    (function ($) {
        
        $("#edit-host-form").dialog({
            modal: true,
            autoOpen: false,
            dialogClass: 'noTitleStuff',
            width: 640,
            height: 480,
            show: {
                effect: "blind",
                duration: 1000
            },
            hide: {
                effect: "explode",
                duration: 1000
            },
            @*buttons: {
                '@T("Cancel")': function () {
                    $("#edit-host-form").dialog("close");

                },
                '@T("Save")': function () {
                    $("#edit-host-form").dialog("close");                    
                }
            },*@
        });
        $(".ui-dialog-titlebar").hide();
        $("#createOrganizerButton").click(function () {
            $("#edit-host-form").dialog("open");
            //ko.applyBindings(vmHost, document.getElementById('host-panel'));
        });

        ko.bindingHandlers.switcher = {
            init: function(element, valueAccessor, allBindingsAccessor) {
                var options = allBindingsAccessor().switcherOptions || {};                
                var value = valueAccessor();                
                if (options && options.values) {
                    for (var i = 0; i < options.values.length; i++) {
                        var opt = options.values[i];
                        var btn = (i == 0) ? $("<button type='button' class='btn btn-primary active'>" + opt.disp + "</button>") : $("<button type='button' class='btn btn-default'>" + opt.disp + "</button>");
                        btn.data('val', opt.val);
                        $(element).append(btn);
                        
                        btn.click(function() {
                            //alert('btn val = ' + $(this).data('val') + '; val = ' + value());
                            if (value() != $(this).data('val')) {
                                $(element).find(" > button").each(function() {
                                    $(this).toggleClass("btn-primary active");
                                    $(this).toggleClass("btn-default");
                                });
                                
                                value($(this).data('val'));
                            }
                        });
                    }
                }
            },
            update: function(element, valueAccessor) {
                var value = valueAccessor();
                
                $(element).find(" > button").each(function() {
                    if ($(this).data('val') == value() && $(this).hasClass("btn-default")) {
                        $(this).toggleClass("btn-primary active");
                        $(this).toggleClass("btn-default");    
                    }
                    
                    if ($(this).data('val') != value() && $(this).hasClass("btn-primary active")) {
                        $(this).toggleClass("btn-primary active");
                        $(this).toggleClass("btn-default");    
                    }

                });
            }
        };

        $(document).ready(function () {
            var vm = new EventViewModel(@Html.Raw(Json.Encode(eventItem)));
            
            vm.getVenueView = function (item) {
                return item === vm.selectedItem() ? 'EventVenueItemTemplateEdit' : "EventVenueItemTemplate";
            };                       

            vm.deleteVenue = function(item) {                
                var ajdata = ko.toJSON(item);
                var urlUpdate = $("#event-item").attr("delete-event-venue-url");

                var config = {
                    async: true,
                    url: urlUpdate,
                    type: "POST",
                    data: ajdata,
                    dataType: "json",
                    cache: false,
                    contentType: "application/json; charset=utf-8",
                    error: function (e) {
                        //window.location.href = "@Url.Action("List")";
                    },
                    success: function (data) {
                        item.State(3);
                    }
                };
                $.ajax(config);
            };

            vm.saveVenue = function(item) {                
                alert('item id = ' + item.Id() + ' selected item id = ' + vm.selectedItem().Id());
                if (vm.selectedItem().Id() == 0)
                    vm.deleteVenue(vm.selectedItem());
                ko.utils.arrayPushAll(item.AllShows, vm.selectedItem().AllShows());
                vm.selectedItem().AllShows.removeAll();
                ko.utils.arrayForEach(item.AllShows(), function(show) {
                    show.VenueId(item.Id());
                });
                vm.selectedItem(null);
                if(false){
                    var ajdata = ko.toJSON(item);
                    var urlUpdate = $("#event-item").attr("save-event-venue-url");

                    var config = {
                        async: true,
                        url: urlUpdate,
                        type: "POST",
                        data: ajdata,
                        dataType: "json",
                        cache: false,
                        contentType: "application/json; charset=utf-8",
                        error: function(e) {
                            //window.location.href = "@Url.Action("List")";
                        },
                        success: function(data) {
                            if(data)
                                item.AllShows.push(new ShowViewModel(data));
                            vm.selectedItem(null);
                        }
                    };
                    $.ajax(config);
                }
                alert("123");
            };

            vm.getShowView = function (item) {
                return item === vm.selectedItem() ? 'ShowItemTemplateEdit' : "ShowItemTemplate";
            };

            vm.cancelShow = function (item) {
                if (item.Id() == 0) {
                    item.State(2);
                    vm.selectedItem(null);
                } else {
                    var ajdata = ko.toJSON(item);
                    var urlUpdate = $("#event-item").attr("get-show-url");

                    var config = {
                        async: true,
                        url: urlUpdate,
                        type: "POST",
                        data: ajdata,
                        dataType: "json",
                        cache: false,
                        contentType: "application/json; charset=utf-8",
                        error: function(e) {
                            //window.location.href = "@Url.Action("List")";
                        },
                        success: function(data) {
                            item.loadData(data);
                            vm.selectedItem(null);
                        }
                    };
                    $.ajax(config);
                }
            };

            vm.addShow = function (item) {
                vm.selectedItem(item.addShow()); 
                //item.addShow();
            };                       

            vm.deleteShow = function(item) {                
                var ajdata = ko.toJSON(item);
                var urlUpdate = $("#event-item").attr("delete-show-url");

                var config = {
                    async: true,
                    url: urlUpdate,
                    type: "POST",
                    data: ajdata,
                    dataType: "json",
                    cache: false,
                    contentType: "application/json; charset=utf-8",
                    error: function (e) {
                        //window.location.href = "@Url.Action("List")";
                    },
                    success: function (data) {
                        item.State(2);
                    }
                };
                $.ajax(config);
            };                        

            vm.saveShow = function(item) {
                var ajdata = ko.toJSON(item);
                var urlUpdate = $("#event-item").attr("save-show-url");

                var config = {
                    async: true,
                    url: urlUpdate,
                    type: "POST",
                    data: ajdata,
                    dataType: "json",
                    cache: false,
                    contentType: "application/json; charset=utf-8",
                    error: function (e) {
                        //window.location.href = "@Url.Action("List")";
                    },
                    success: function (data) {                        
                        if (item.Id() == 0 || item.Id() != data)
                            item.Id(data);
                        
                        vm.selectedItem(null);
                    }
                };
                $.ajax(config);
            };

            vm.deleteEvent = function (item) {
                var ajdata = ko.toJSON(item);
                var urlUpdate = $("#event-item").attr("delete-event-url");

                var config = {
                    async: true,
                    url: urlUpdate,
                    type: "POST",
                    data: ajdata,
                    dataType: "json",
                    cache: false,
                    contentType: "application/json; charset=utf-8",
                    error: function (e) {
                        //window.location.href = "@Url.Action("List")";
                    },
                    success: function (data) {
                        window.location.href = "@Url.Action("List")";
                    }
                };
                $.ajax(config);
            };

            vm.saveEvent = function(item) {
                var ajdata = ko.toJSON(item);                
                var urlUpdate = $("#event-item").attr("save-event-url");
                
                var config = {
                    async: true,
                    url: urlUpdate,
                    type: "POST",
                    data: ajdata,
                    dataType: "json",
                    cache: false,
                    contentType: "application/json; charset=utf-8",
                    error: function (e) {
                        //window.location.href = "@Url.Action("List")";
                    },
                    success: function (data) {                        
                        if (item.Id() == 0)
                            item.loadData(data);
                    }
                };
                $.ajax(config);                
            };

            $("#edit-host-form").bind('OnHostCancelled', function (event) {
                $("#edit-host-form").dialog("close");
            });
        
            $("#edit-host-form").bind('OnHostSaved', function (event) {
                vm.AllHosts.push(event.item);
                vm.Host(event.item);
                $("#edit-host-form").dialog("close");
            });

            ko.applyBindings(vm, document.getElementById('event-item'));            
        });
    })(jQuery);
</script>