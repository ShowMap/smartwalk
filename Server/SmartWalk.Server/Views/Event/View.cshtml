@using System.Globalization
@using SmartWalk.Server.Common
@using SmartWalk.Server.Records
@using SmartWalk.Server.ViewModels
@using SmartWalk.Server.Utils
@using SmartWalk.Shared.Utils
@using SmartWalk.Server.Common.Utils
@model EventMetadataVm
@{
    Style.Require("SmartWalk");
    Style.Require("TextCollapse");

    Script.Require("AddThisEvent").AtFoot();
    Script.Require("ImageScale").AtFoot();
    Script.Require("TextCollapse").AtFoot();
    Script.Require("SmartWalk.AntiForgery").AtFoot();

    Html.AppendTitleParts(Model.DisplayName(), Convert.ToString(T("Event")));

    var allowedActions = (AllowedActions)ViewData[ViewDataParams.AllowedActions];
    var culture = CultureInfo.GetCultureInfo(WorkContext.CurrentCulture);
    var currentDay = (int?)ViewData[ViewDataParams.Day];
    var editAction = Url.Action("Edit", Model.IsMultiDay() ? new { day = currentDay } : null);
}
    @Html.AntiForgeryTokenOrchard()

    <div class="bg-image-container page-header-image">
        <div class="header">
            <h2>
            @if (allowedActions.CanEdit)
            {
                <a class="btn" href="@editAction">@HtmlUtil.AdaptiveCapture("Edit", "Event")</a>
            }    
                @Model.DisplayName()
            </h2>
            @if (!string.IsNullOrEmpty(Model.DisplayPicture()))
            {
                <img class="scale" data-scale="best-fill" data-align="center" src="@Model.DisplayPicture()" alt="" />
            }
        </div>
			
        <div class="info">
            <div class="pull-left">
                <div><h3>@Model.DisplayDate(culture)</h3></div>
                <div><h4>@T("Organized By")&nbsp;<a href="@Url.Action("View", "Host", new { entityId = Model.Host.Id })">@Model.Host.Name</a></h4></div>
            </div>
		    
            <div class="pull-right add-event-widget">
                <a href="@Request.RawUrl" title="Add to Calendar" class="addthisevent" data-track="_gaq.push(['_trackEvent','AddThisEvent','click','ate-calendar'])">
                    Add to Calendar
@* ReSharper disable UnknownCssClass *@
                    <span class="_start">@Model.StartDate.ToString("G", CultureInfo.InvariantCulture)</span>
                    <span class="_end">@Model.EndDate.ToString("G", CultureInfo.InvariantCulture)</span>
                    @*<span class="_zonecode">6</span>*@
                    <span class="_summary">@Model.DisplayName()</span>
                    <span class="_description">@Model.Description</span>
                    <span class="_location">@Model.Latitude,@Model.Longitude</span>
                    <span class="_organizer">@Model.Host.Name</span>
                    <span class="_organizer_email">@Model.Host.Contacts.Where(c => c.Type == (int)ContactType.Email).Select(c => c.Contact).FirstOrDefault()</span>
                    @*<span class="_facebook_event"></span>*@
                    <span class="_all_day_event">true</span>
                    <span class="_date_format">@CultureInfo.InvariantCulture.DateTimeFormat.ShortDatePattern.ToUpperInvariant()</span>
@* ReSharper restore UnknownCssClass *@
                </a>
            </div>
        </div>	
    </div>
        
@Html.Partial("../AddressMap/View", Model.ToAddressMapVm(MapType.Google))

@if (!@Model.Description.IsEmpty())
{
    <div class="row gap">
        <div class="col-md-8"><p class="description">@Html.Raw(Model.Description.ActivateLinks())</p></div>
    </div>
}
@if (Model.IsMultiDay())
{   
    var daysCount = DateTimeExtensions.DaysCount(Model.StartDate, Model.EndDate);

    <div class="row gap">
        <div class="col-md-12">
            <ul class="event-days-picker">
@* ReSharper disable PossibleInvalidOperationException *@
                @for (var i = 1; i <= daysCount; i++)
                {
                    var day = @Model.StartDate.Value.AddDays(i - 1);
                    <li><a class="img-circle@((currentDay ?? (int?)1) == i ? " selected" : "")" href="@Url.Action("View", new { day = i })"><div class="day">@day.ToString("ddd", culture)</div><div class="date">@day.Day</div></a></li>
                }
@* ReSharper restore PossibleInvalidOperationException *@
            </ul>
        </div>
    </div>
}

@if (Model.Venues != null && Model.Venues.Count > 0)
{     
    <table class="table table-content">
        <thead>
            <tr><th><h4>@T("Venues and Shows")</h4></th><th class="td-align" colspan="2">@T("Time")</th></tr>
        </thead>
        <tbody>
        @foreach (var venue in Model.Venues)
        {
            <tr class="venue">
                <td colspan="4">
                    <div class="clearfix">
                        <a class="bg-image" href="@Url.Action("View", "Venue", new { entityId = venue.Id })">
                            <img class="scale" data-scale="best-fill" data-align="center" src="@venue.Picture" />
                            <span class="abbr">@venue.Abbreviation</span>
                        </a>
                        <div class="venue-margin hidden-xs"></div>
                        @{ var venueNumber = @venue.DisplayNumber(Model); }
                        @if (venueNumber != string.Empty) {<h4>@venueNumber</h4>}<a href="@Url.Action("View", "Venue", new { entityId = venue.Id })"><h4>@venue.Name</h4></a><br />
                    @if (venue.HasAddresses())
                    {
                        var address = venue.FirstAddress();
                        <address><span>@address.Address</span><i class="tip description">@address.Tip</i></address>
                    }
                    </div>
                @if (venue.EventDetail != null && venue.EventDetail.Description != null)
                {
                    <div class="description">@Html.Raw(@venue.EventDetail.Description.ActivateLinks())</div>
                }
                </td>
            </tr>
                foreach (var show in venue.Shows)
                {
            <tr class="venue-show">
                <td class="show-text">@show.Title<br/>@if (@show.Description != null)
                    {<span class="description">@Html.Raw(show.Description.ActivateLinks())</span>}</td>                        
                <td class="show-start-time">@Html.Raw(@show.DisplayStartTime(culture).Replace(" ", "&nbsp;"))</td>
                <td class="show-end-time">@Html.Raw(@show.DisplayEndTime(culture).Replace(" ", "&nbsp;"))</td>
            </tr>   
                }
        }                
        </tbody>
    </table>
}
@* ReSharper disable UseOfImplicitGlobalInFunctionScope *@
@using (Script.Foot())
{
<script type="text/javascript">
    $(function () {        
        $("img.scale").imageScale();
        $("p.description").textCollapse();
        
        if (addthisevent) {
            addthisevent.settings({
                license: "@Settings.AddThisEventLicense",
                mouse: false,
                css: true,
                outlook: { show: true, text: "Outlook Calendar" },
                google: { show: true, text: "Google Calendar" },
                yahoo: { show: true, text: "Yahoo Calendar" },
                hotmail: { show: true, text: "Hotmail Calendar" },
                ical: { show: true, text: "iCal Calendar" },
                facebook: { show: true, text: "Facebook Event" },
                dropdown: { order: "facebook,outlook,google,ical,yahoo,hotmail" }
            });
        }
    });
</script>
}
@* ReSharper restore UseOfImplicitGlobalInFunctionScope *@