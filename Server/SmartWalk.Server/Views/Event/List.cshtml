@using SmartWalk.Server.ViewModels

@{
    Style.Require("jQueryUI_Orchard");
    Style.Require("SmartWalk.ListEvent");

    //Script.Require("jQuery").AtHead();
    Script.Require("jQueryUI").AtHead();
    Script.Require("SmartWalk.ViewModels").AtHead();

    var items = (IList<EventMetadataVm>)Model;
}

<div id="event-items" data-bind="visible: EventItems().length > 0">
   <div class="container">
        <div class="row">
            <div class="col-xs-8">
                <div class="input-group">
                    <input type="text" class="form-control" placeholder="@T("Type event name...")">
                    <span class="input-group-btn">
                        <button class="btn btn-default" type="button">@T("Search")</button>
                    </span>
                </div>
            </div>
            <div class="col-xs-4 text-right">
                @{ 
                    using (Html.BeginRouteForm("CreateEvent", FormMethod.Get)){
                        <button type="submit" class="btn btn-primary">@T("Create event")</button>
                    }
                }
            </div>
        </div>
        
        <div class="gap">
            <small>
                <a href="#/events">@T("All Events")</a>&nbsp;|&nbsp;<a href="#/events/my">@T("My Events")</a>
                &nbsp;&nbsp;&nbsp;&nbsp;
                @T("Sort By"):&nbsp;<a href="#/events">@T("Date")</a>&nbsp;|&nbsp;<a href="#/events/my">@T("Title")</a>
            </small>
        </div>

        <div class="floating-container small-gap">
            @foreach (var item in items) {
                <a class="thumbnail floating" href="@Url.Action("View", new {eventId = item.Id})/edit">
                    <img src="@item.Picture">
                    <div class="caption">
                        <h3>@item.Title</h3>
                        <h5>@item.DisplayDate</h5>
                    </div>
                </a>
            }
            <div class="clearfix"/>
        </div>           
    </div>
</div>

<script type="text/html" id="eventItemTemplate">      
</script>


<script>
    $(document).ready(function() {

        function EventsViewModel() {
            var self = this;

            //self.EventItems = ko.observableArray($.map(@Html.Raw(Json.Encode(items)), function(item) { return new EventViewModel(item); }));
        }

        //ko.applyBindings(new EventsViewModel(), document.getElementById('event-items'));
    });
</script>