@using SmartWalk.Server.ViewModels
@{
    Style.Require("SmartWalk");

    Script.Require("ImageScale").AtFoot();
    Script.Require("SmartWalk.AntiForgery").AtFoot();
    Script.Require("SmartWalk.Common").AtFoot();

    var model = (ListViewVm)Model;
    var parameters = model.Parameters;
    var items = (IList<EventMetadataVm>)model.Data;
    var linkClass = "";
    var baseLink = string.Format("/events{0}", parameters.Url);
}
    <div id="event-items" get-events-url="@Url.Action("GetEvents", "Event", new {area = "SmartWalk.Server"})">
        @Html.AntiForgeryTokenOrchard()    
    
        <div class="row">
            <div class="col-xs-8">
                <div class="input-group">
                    <input type="text" class="form-control" placeholder="@T("type event name...")" data-bind="value: query">
                    <span class="input-group-btn">
                        <button id="btnSearch" class="btn btn-default" type="button">@T("Search")</button>
                    </span>
                </div>
            </div>
        @if (parameters.IsLoggedIn) {
            <div class="col-xs-4">
                <form action="/events/create">
                    <button type="submit" class="btn btn-primary">@T("Create") <span class="hidden-xs">@T("Event")</span></button>
                </form>  
            </div>
        }
        </div>
        
        <div class="gap">
            <small>
            @if (parameters.IsLoggedIn) {
                <span>
                    @{
                        linkClass = parameters.Display == DisplayType.My ? "selected" : "default";
                    }
                    <a class="@linkClass" href="@string.Format("/events?sort={0}", parameters.Sort.ToString().ToLower())">@T("All Events")</a>
                    &nbsp;| 
                    @{
                        linkClass = parameters.Display == DisplayType.All ? "selected" : "default";
                    }
                    <a class="@linkClass" href="@string.Format("/events/my?sort={1}", baseLink, parameters.Sort.ToString().ToLower())">@T("My Events")</a>
                    &nbsp;&nbsp;&nbsp;&nbsp;
                </span>
            }
                @T("Sort By"):&nbsp;
                @{
                    linkClass = parameters.Sort == SortType.Date ? "selected" : "default";
                }    
                <a class="@linkClass" href="@string.Format("{0}?sort={1}", baseLink, SortType.Date.ToString().ToLower())">@T("Date")</a>
                &nbsp;|&nbsp;
                @{
                    linkClass = parameters.Sort == SortType.Title ? "selected" : "default";
                }    
                <a class="@linkClass" href="@string.Format("{0}?sort={1}", baseLink, SortType.Title.ToString().ToLower())">@T("Title")</a>
            </small>
        </div>

       <div class="floating-container small-gap">
        @foreach (var item in items) {
            <a class="thumbnail floating bg-image-container default-rows" href="@Url.Action("View", new {eventId = item.Id})">
                <div class="header">
                    <h3>@item.DisplayName</h3>
			
                    <img class="scale" data-scale="best-fill" data-align="center" src="@item.DisplayPicture">
                </div>
				                
                <div class="info"><h4>@item.DisplayDate</h4></div>
            </a>
        }
           <!-- ko template: {name: "EventItemTemplate", foreach: items() } -->    
           <!-- /ko -->
           <div class="clearfix"></div>
       </div>           
    </div>

<script type="text/html" id="EventItemTemplate">
    <a class="thumbnail floating bg-image-container" data-bind="attr: {href: '/event/' + id()}">
        <div class="header">
            <h3 data-bind="text: displayName()"></h3>
			
            <img class="scale" data-scale="best-fill" data-align="center" data-bind="attr: {src: displayPicture()}">
        </div>
				
        <div class="info">
            @* TODO: To use common with server formatting pattern *@
            <h4 data-bind="text: displayDate()"></h4>
        </div>
    </a>   
</script>

@using (Script.Foot())
{
<script type="text/javascript">
    EventsViewModel = function(data, url) {
        var self = this;

        EventsViewModel.superClass_.constructor.call(self, data, url);

        self.addItem = function(event) {
            self.items.push(new EventViewModel(event));
            $("img.scale").imageScale(); // TODO: Move to KO's onTemplateLoaded
        };  
    };

    inherits(EventsViewModel, ListViewModel);

    $(function() {
        var viewModel = new EventsViewModel(
            @Html.Raw(JsonConvert.SerializeObject(parameters, JsonNetResult.Settings)), 
            $("#event-items").attr("get-events-url"));

        attachVerticalScroll(viewModel.getNextPage);

        ko.applyBindings(viewModel, document.getElementById("event-items"));

        $("#btnSearch").click(function() {
            $("a").remove(".default-rows"); // TODO: What's this for? This is because default rows - are rows, loaded for the first time, from server. And this rows are not in search result, because they are not connected with ajax loading (search rows does)
            viewModel.search();
        });
        $("img.scale").imageScale();
    });    
</script>
}