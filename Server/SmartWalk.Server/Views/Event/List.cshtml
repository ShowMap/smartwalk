@using SmartWalk.Server.ViewModels

@{
    Style.Require("jQueryUI_Orchard");
    Style.Require("SmartWalk.ListEvent");

    //Script.Require("jQuery").AtHead();
    Script.Require("jQueryUI").AtHead();
    Script.Require("SmartWalk.ViewModels").AtHead();

    var model = (ListViewVm)Model;
    var parameters = model.Parameters;
    var items = (IList<EventMetadataVm>)model.Data;
}

<div id="event-items" get-events-url="@Url.Action("GetEvents", "Event", new {area = "SmartWalk.Server"})">
    @Html.AntiForgeryTokenOrchard()    
   <div class="container">
        <div class="row">
            <div class="col-xs-8">
                <div class="input-group">
                    <input type="text" class="form-control" placeholder="@T("Type event name...")">
                    <span class="input-group-btn">
                        <button class="btn btn-default" type="button">@T("Search")</button>
                    </span>
                </div>
            </div>
            @if (parameters.IsLoggedIn) {
                <div class="col-xs-4 text-right">
                    <form action="/events/create">
                        <button type="submit" class="btn btn-primary">@T("Create event")</button>
                    </form>  
                </div>
            }
        </div>
        
        
            <div class="gap">
                <small>
                    @if (parameters.IsLoggedIn) {
                        <span>
                            <a href="/events?Parameters.Display=All&Parameters.Sort=@parameters.Sort">@T("All Events")</a>
                            &nbsp;| 
                            <a href="/events?Parameters.Display=My&Parameters.Sort=@parameters.Sort">@T("My Events")</a>
                            &nbsp;&nbsp;&nbsp;&nbsp;
                        </span>
                    }
                    
                    @T("Sort By"):&nbsp;<a href="/events?Parameters.Display=@parameters.Display&Parameters.Sort=Date">@T("Date")</a>&nbsp;|&nbsp;<a href="/events?Parameters.Display=@parameters.Display&Parameters.Sort=Title">@T("Title")</a>
                </small>
            </div>

        <div class="floating-container small-gap">
            @foreach (var item in items) {
                <a class="thumbnail floating" href="@Url.Action("View", new {eventId = item.Id})">
                    <img src="@item.Picture">
                    <div class="caption">
                        <h3>@item.Title</h3>
                        <h5>@item.DisplayDate</h5>
                    </div>
                </a>
            }
            <!-- ko template: {name: "EventItemTemplate", foreach: Items() } -->    
            <!-- /ko -->
            <div class="clearfix"/>
        </div>           
    </div>
</div>

<script type="text/html" id="EventItemTemplate">  
    <a class="thumbnail floating" data-bind="attr: { href: '/event/' + Id() }">
        <img data-bind="attr: { src: Picture }"/>
        <div class="caption">
            <h3 data-bind="text: Title"></h3>
            <h5 data-bind="text: DisplayDate"></h5>
        </div>
    </a>    
</script>


<script>
    function VenuesViewModel() {
        var self = this;

        self.Items = ko.observableArray();
        self.currentPage = ko.observable(1);


        self.getNextPage = function () {
            return getData(self.currentPage() + 1);
        };

        function getData(pageNumber) {
            if (self.currentPage() != pageNumber) {
                console.log("Scroll Postion begin getData" + $(window).scrollTop());
                var ajdata = { pageNumber: pageNumber, parameters: @Html.Raw(Json.Encode(parameters)) };
                var urlUpdate = $("#event-items").attr("get-events-url");

                var config = {
                    async: true,
                    url: urlUpdate,
                    type: "POST",
                    data: JSON.stringify(ajdata),
                    dataType: "json",
                    cache: false,
                    contentType: "application/json; charset=utf-8",
                    error: function (e) {
                        //window.location.href = "@Url.Action("List")";
                    },
                    success: function (data) {
                        if (data.length > 0) {
                            self.currentPage(self.currentPage() + 1);
                            for (var i = 0; i < data.length; i++) {
                                self.Items.push(new EventViewModel(data[i]));
                                console.log("Scroll Postion looping ViewModel" + $(window).scrollTop());
                            }
                        }
                    }
                };

                $.ajax(config);
            }
        }
    }

    $(document).ready(function () {
        var viewModel = new VenuesViewModel();

        ko.applyBindings(viewModel, document.getElementById('event-items'));

        $(window).scroll(function (evt) {
            evt.preventDefault();
            if ($(window).scrollTop() >= $(document).height() - $(window).height()) {
                console.log("Scroll Postion" + $(window).scrollTop());
                viewModel.getNextPage();
            }
        });
    });

    $(document).ready(function() {

        function EventsViewModel() {
            var self = this;

            //self.EventItems = ko.observableArray($.map(@Html.Raw(Json.Encode(items)), function(item) { return new EventViewModel(item); }));
        }

        //ko.applyBindings(new EventsViewModel(), document.getElementById('event-items'));
    });
</script>